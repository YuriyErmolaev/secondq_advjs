(()=>{var t={398:()=>{Vue.component("cart",{data:()=>({cartUrl:"/getBasket.json",cartItems:[],imgCart:"https://placehold.it/50x100",showCart:!1}),mounted(){this.$parent.getJson("/api/cart").then((t=>{for(let e of t.contents)this.$data.cartItems.push(e)}))},methods:{addProduct(t){let e=this.cartItems.find((e=>e.id_product===t.id_product));if(e)this.$parent.putJson(`/api/cart/${e.id_product}`,{quantity:1}).then((t=>{console.log(t),1===t.result&&e.quantity++}));else{const e=Object.assign({quantity:1},t);this.$parent.postJson("/api/cart",e).then((t=>{1===t.result&&this.cartItems.push(e)}))}},remove(t){let e=this.cartItems.find((e=>e.id_product===t.id_product));e&&(e.quantity>1?this.$parent.putJson(`/api/cart/${e.id_product}`,{quantity:-1}).then((t=>{console.log(t),t.result&&e.quantity--})):this.$parent.delJson(`/api/cart/${e.id_product}`,e).then((t=>{t.result?this.cartItems.splice(this.cartItems.indexOf(e),1):console.log("error")})))}},template:'\n                <div class="topBasketWrap">\n                    <a href="#" class="topBasket btn-cart" type="button" @click="showCart = !showCart">\n                        <img src="img/basketIcon.png" alt="miniBasket">\n                    </a>\n                    <div class="subMenuArrow" v-show="showCart"></div>\n                    <nav class="mainSubMenusBlock cartMainSubMenuBlock" v-show="showCart">\n                        <div class="subMenuBox">\n                            <div class="subMenuBoxTextInfo">\n                                \x3c!--<button class="btn-cart" type="button" @click="showCart = !showCart">Корзина</button>--\x3e\n                                \x3c!--<div class="cart-block" v-show="showCart">--\x3e\n                                <div class="cart-block"\n                                    <ul class="subMenu">\n                                        <cart-item \n                                            v-for="item of cartItems" \n                                            :key="item.id_product" \n                                            :img="imgCart" \n                                            :cart-item="item" \n                                            @remove="remove">\n                                        </cart-item>\n                                    </ul>\n                                </div>\n                            </div>        \n                            <ul class="subMenu">\n                                <li class="miniCartTotalItem">\n                                    <div class="totalBlock">\n                                        <div>TOTAL</div>\n                                        <div>$500.00</div>\n                                    </div>\n                                    <a href="checkout.html" class="checkout button">Checkout</a>\n                                    <a href="cart.html" class="goToCart button">Go to cart</a>\n                                </li>\n                            </ul>\n                            </div>\n                        </div>\n\n                    </nav>\n                </div>\n                '}),Vue.component("cart-item",{props:["img","cartItem"],template:'<li class="miniCartItem">\n                    <a href="product_detail.html" \n                        class="miniCartItemImgBlock miniCartItemImgBlock1"\n                        :style="{ \'background-image\': \'url(/storage/images/products/\' + (cartItem.id_product) + \'.png)\' }">\n                    </a>\n                    <div class="miniCartItemInfoBlock">\n                        <div class="name">{{ cartItem.product_name }}</div>\n                        <div class="mark">\n                            <img src="img/markStars.png" alt="markStars">\n                        </div>\n                        <div class="numberAndPrive del-btn">\n                            {{ cartItem.quantity }} x $ {{ cartItem.price }} = $ {{cartItem.quantity*cartItem.price}}\n                        </div>\n                    </div>\n                    <div class="miniCartItemDeleteBlock" @click="$emit(\'remove\', cartItem)">\n                        <img class="crossIcon" src="img/crossIcon.png" alt="cross">\n                    </div>\n                </li>'})},27:()=>{Vue.component("error",{data:()=>({text:""}),computed:{isVisible(){return""!==this.text}},template:'\n    <div class="error-block" v-if="isVisible">\n        <p class="error-msg">\n        <button class="close-btn" @click="text=\'\'">&times;</button>\n        {{ text }}\n</p>\n</div>\n    '})},615:()=>{Vue.component("ProductFilter",{data:()=>({userSearch:""}),template:'<form action="#" class="searchBlock search-form" @submit.prevent="$parent.$refs.products.filter(userSearch)">\n                        <details>\n                            <summary class="button searchSelect">Browse &#9660;</summary>\n                            <div class="subMenuArrow"></div>\n                            <nav class="mainSubMenusBlock">\n                                <div class="subMenuBox">\n                                    <div class="subMenuBoxTextInfo">\n                                        <div class="subMenuBoxTitle">COMPANY</div>\n                                        <ul class="subMenu">\n                                            <li><a href="#">Home</a></li>\n                                            <li><a href="#">Shop</a></li>\n                                            <li><a href="#">About</a></li>\n                                            <li><a href="#">How It Works</a></li>\n                                            <li><a href="#">Contact</a></li>\n                                            <li><a href="#">Home</a></li>\n                                            <li><a href="#">Shop</a></li>\n                                            <li><a href="#">About</a></li>\n                                            <li><a href="#">How It Works</a></li>\n                                        </ul>\n                                    </div>\n                                </div>\n                                <div class="subMenuBox">\n                                    <div class="subMenuBoxTextInfo">\n                                        <div class="subMenuBoxTitle">INFORMATION</div>\n                                        <ul class="subMenu">\n                                            <li><a href="#">Tearms & Condition</a></li>\n                                            <li><a href="#">Privacy Policy</a></li>\n                                            <li><a href="#">How to Buy</a></li>\n                                            <li><a href="#">How to Sell</a></li>\n\n                                        </ul>\n                                    </div>\n                                </div>\n\n                            </nav>\n                        </details>\n                        <input type="text" class="searchInputTest search-field" placeholder="Search for item..." v-model="userSearch">\n                        <button class="searchSubmit" type="submit">\n                            <img src="img/loupeIcon.png" alt="loupe">\n                        </button>\n                    </form>'})},798:()=>{Vue.component("products",{data:()=>({catalogUrl:"/catalogData.json",filtered:[],products:[],imgProduct:"/imgs/default.png"}),mounted(){this.$parent.getJson("/api/products").then((t=>{for(let e of t)this.$data.products.push(e),this.$data.filtered.push(e)}))},methods:{filter(t){let e=new RegExp(t,"i");this.filtered=this.products.filter((t=>e.test(t.product_name)))}},template:'<div class="products featuredItemsBlock">\n                <product v-for="item of filtered" \n                :key="item.id_product" \n                :img="imgProduct"\n                :product="item"\n                @add-product="$parent.$refs.cart.addProduct"></product>\n               </div>'}),Vue.component("product",{props:["product","img"],template:'<div class="featureItem">\n            <a class="featureItemLink" href="product_detail.html">\n                <div class="featureItemImgBlock featureImg1"\n                    :style="{ \'background-image\': \'url(/storage/images/products/\' + (product.id_product) + \'.png)\' }"\n                ></div>\n                <div class="featureItemInfoBlock">\n                    <div class="featureItemTitleBlock">{{product.product_name}}</div>\n                    <div class="featureItemPriceBlock">$ {{product.price}}</div>\n                </div>\n            </a>\n            <div class="addTobasketLinkWrap">\n                <button class="addTobasketLink buy-btn button" @click="$emit(\'add-product\', product)">\n                    <img class="whiteBasketIcon" src="img/whiteBasketIcon.png" alt="white basket icon">\n                        Add to Cart\n                </button>\n            </div>\n        </div>'})}},e={};function n(a){var s=e[a];if(void 0!==s)return s.exports;var r=e[a]={exports:{}};return t[a](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var a in e)n.o(e,a)&&!n.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";var t=n(398),e=n.n(t),a=n(27),s=n.n(a),r=(n(615),n(798)),i=n.n(r);e(),s(),filter,i()})()})();